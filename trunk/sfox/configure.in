AC_INIT(src/game/starmain.c)

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE(starmain, 0.0.1)

AC_PROG_RANLIB
AC_PROG_CC

REQUIRED_SDL_VERSION=1.2.0
REQUIRED_GLIB2_VERSION=2.0.0
REQUIRED_FREETYPE2_VERSION=2.0.0

AC_C_CONST
AC_CHECK_HEADERS([string.h])
AC_CHECK_FUNCS([memset])

dnl Checks for SDL.
AM_PATH_SDL([$REQUIRED_SDL_VERSION],, [AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])])

dnl Checks for glib
AM_PATH_GLIB_2_0([$REQUIRED_GLIB2_VERSION],, [AC_MSG_ERROR([*** GLIB-2 version too old])])

dnl Checks for freetype2
AC_CHECK_FT2([$REQUIRED_FREETYPE2_VERSION],, [AC_MSG_ERROR([*** FREETYPE2 version too old])])

dnl Check for SDL_image
AC_CHECK_LIB(SDL_image, IMG_Load,SDL_LIBS="$SDL_LIBS -lSDL_image", [AC_MSG_ERROR(*** SDL_image not found)])

dnl Check for libpng
AC_CHECK_LIB(m, pow)
AC_CHECK_LIB(z, gzopen)
#AC_CHECK_LIB(bz2, BZ2_bzCompressInit)
AC_CHECK_LIB(png, png_init_io,, [AC_MSG_ERROR(*** libpng not found)], [-lz])

dnl Figure out which math and gl library to use
case "$target" in
    *-*-cygwin* | *-*-mingw32*)
	windows=yes
        MATHLIB=""
        SYS_GL_LIB="opengl32"
        SYS_GLU_LIB="glu32"
        ;;
    *)
        dnl Checks for x11
        AC_PATH_X
        AC_PATH_XTRA

	OPENGL_LIBS="$X_LIBS -lpthread"
        MATHLIB="m"
        SYS_GL_LIB="GL"
        SYS_GLU_LIB="GLU"
        ;;
esac
AC_SUBST(MATHLIB)

dnl Check for opengl and glu
AC_LANG_C
OLDLIBS=$LIBS
LIBS="-l$SYS_GL_LIB $OPENGL_LIBS $LIBS"
AC_MSG_CHECKING([opengl])
AC_TRY_LINK([
#ifdef _WIN32
#include <windows.h>
#include <GL/gl.h>
#else
char glEnd();
#endif
], [ glEnd(); ], has_opengl="yes", has_opengl="")
if test x$has_opengl != x; then
   AC_MSG_RESULT([yes])
   OPENGL_LIBS="-l$SYS_GL_LIB $OPENGL_LIBS"
else
   AC_MSG_RESULT([no])
   AC_MSG_ERROR(OpenGL is not installed: missing $SYS_GL_LIB library)
fi
dnl Same test for glu
LIBS="-l$SYS_GLU_LIB $LIBS"
AC_MSG_CHECKING([glu])
AC_TRY_LINK([
#ifdef _WIN32
#include <windows.h>
#include <GL/gl.h>
#include <GL/glu.h>
#else
char gluTessBeginContour(void *p);
#endif
], [ gluTessBeginContour(0); ], has_glu="yes", has_glu="")
if test x$has_glu != x; then
   AC_MSG_RESULT([yes])
   OPENGL_LIBS="$OPENGL_LIBS -l$SYS_GLU_LIB"
else
   AC_MSG_RESULT([no])
   AC_MSG_ERROR(Glu is not installed: missing $SYS_GLU_LIB library)
fi
LIBS=$OLDLIBS

AC_SUBST(OPENGL_LIBS)
AC_SUBST(OPENGL_FLAGS)

CFLAGS="$CFLAGS -Wall"

dnl Enable debug or profiling
AC_ARG_ENABLE(debugging, [  --enable-debug          Compile with debug symbols ], CFLAGS="$CFLAGS -g")
AC_ARG_ENABLE(profiling, [  --enable-profiling      Compile with profiling enabled ], CFLAGS="$CFLAGS -g -pg")

dnl Checks for header files.
AC_HEADER_STDC

AC_OUTPUT([Makefile \
        src/Makefile \
	src/game/Makefile \
	src/starengine/Makefile \
	src/starengine/framework/Makefile \
	src/starengine/engine/Makefile \
	src/starengine/math/Makefile \
	src/utils/Makefile \
	src/utils/raw2png/Makefile])
