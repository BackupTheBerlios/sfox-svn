AC_INIT(src/main.cpp)

CFLAGS="$CFLAGS -Wall"
CXXFLAGS="$CXXFLAGS -Wall -g"
TARGETS="reflection"

dnl Detect the canonical host and target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_INIT_AUTOMAKE([$TARGETS], [0.0.1])

dnl Checks for programs.
AC_PROG_RANLIB
AC_PROG_CC
AC_PROG_CXX

AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_LN_S
AC_C_INLINE


REQUIRED_SDL_VERSION=1.2.0
REQUIRED_FREETYPE2_VERSION=2.0.0

AC_C_CONST
AC_CHECK_HEADERS([string.h])
AC_CHECK_FUNCS([memset])

dnl Checks for SDL.
AM_PATH_SDL([$REQUIRED_SDL_VERSION],, [AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])])

dnl Checks for freetype2
AC_CHECK_FT2([$REQUIRED_FREETYPE2_VERSION],, [AC_MSG_ERROR([*** FREETYPE2 version too old])])

dnl Check for SDL_image
AC_CHECK_LIB(SDL_image, IMG_Load,SDL_LIBS="$SDL_LIBS -lSDL_image", [AC_MSG_ERROR(*** SDL_image not found)], [$SDL_CFLAGS $SDL_LIBS])

dnl Check for libpng
AC_CHECK_LIB(m, pow)
AC_CHECK_LIB(z, gzopen)
AC_CHECK_LIB(png, png_init_io,, [AC_MSG_ERROR(*** libpng not found)], [-lz -lm])

dnl Check for OpenGL
case "$target" in
    *-*-cygwin* | *-*-mingw32*)
	windows=yes
        SYS_GL_LIB="opengl32"
        SYS_GLU_LIB="glu32"
	TARGETS="$TARGET.exe"
        ;;
    *)
        dnl Checks for x11
        AC_PATH_X
        AC_PATH_XTRA
				
        SYS_GL_LIB="GL"
        SYS_GLU_LIB="GLU"
        ;;
esac
dnl TARGETS will be .exe if we are compiling for win32
AC_SUBST(TARGETS)

save_LIBS="$LIBS"
    LIBS="$LIBS -l$SYS_GL_LIB $X_LIBS"
    if test -n "$SYS_GL_LIB";then
       AC_MSG_CHECKING([for OpenGL($SYS_GL_LIB)])
       AC_TRY_LINK([
        #ifdef _WIN32
        #include <windows.h>
        #include <SDL_opengl.h>
        #else
        char glEnd();
        #endif
       ], [ glEnd(); ], has_opengl="yes", has_opengl="")
        if test x$has_opengl != x; then
          AC_MSG_RESULT([yes])
          GL_LIBS="-l$SYS_GL_LIB $GL_LIB"
        else
          AC_MSG_RESULT([no])
          AC_MSG_ERROR(OpenGL is not installed: missing $SYS_GL_LIB library)
        fi
    fi
    LIBS="$LIBS -l$SYS_GLU_LIB"
    if test -n "$SYS_GLU_LIB";then
       AC_MSG_CHECKING([for OpenGL Utility($SYS_GLU_LIB)])
       AC_TRY_LINK([
        #ifdef _WIN32
        #include <windows.h>
        #include <GL/gl.h>
        #include <GL/glu.h>
        #else
        char gluBeginPolygon(void *p);
        #endif
       ], [ gluBeginPolygon(0); ], has_glu="yes", has_glu="")
       if test x$has_glu != x; then
          AC_MSG_RESULT([yes])
          GL_LIBS="$GL_LIBS -l$SYS_GLU_LIB"
       else
          AC_MSG_RESULT([no])
          AC_MSG_ERROR(GLU is not installed: missing $SYS_GLU_LIB library)
       fi
    fi
    LIBS="$save_LIBS"
    if test -n "$MATHLIB";then
       AC_CHECK_LIB($MATHLIB, cos,:,
       AC_MSG_ERROR([ *** $MATHLIB is missing ***]))
       GL_LIBS="$GL_LIBS -l$MATHLIB"
    fi
    GL_CFLAGS="$SYS_GL_CFLAGS -DHAVE_OPENGL"
CFLAGS="$save_CFLAGS"

AC_SUBST(GL_CFLAGS)
AC_SUBST(GL_LIBS)

dnl Enable debug or profiling
AC_ARG_ENABLE(debugging, [  --enable-debug          Compile with debug symbols ], CFLAGS="$CFLAGS -g")
AC_ARG_ENABLE(profiling, [  --enable-profiling      Compile with profiling enabled ], CFLAGS="$CFLAGS -g -pg")

dnl Checks for header files.
AC_HEADER_STDC

AC_OUTPUT([Makefile
          src/Makefile \
	  src/framework/Makefile
	  src/opengl/Makefile])
